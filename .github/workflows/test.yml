name: Test

on:
  push:

jobs:
  tests1:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v3.1.0
        with:
          go-version-file: go.mod
          cache: true

      - name: Test tests1
        run: set -o pipefail && go test ./tests1 -json | go run ./test_parser.go >> $GITHUB_STEP_SUMMARY

  tests2:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v3.1.0
        with:
          go-version-file: go.mod
          cache: true

      - name: Test tests2
        run: set -o pipefail && go test ./tests2 -json | go run ./test_parser.go >> $GITHUB_STEP_SUMMARY

#      - name: Test
#        id: test
#        run: |
#          status=0
#          test2json=''"$(go test ./... -json)"'' || status=1
#
#          echo 'TEST2JSON<<EOF' >> $GITHUB_ENV
#          echo ''"$test2json"'' >> $GITHUB_ENV
#          echo 'EOF' >> $GITHUB_ENV
#
#          echo '${{ env.TEST2JSON }}'
#
#          [ $status -eq 0 ] && echo "passed" || echo "failed" ; exit 1
#
#      - name: Summary
#        if: always()
#        run: |
#          echo '${{ env.TEST2JSON }}' | go run ./test_parser.go >> $GITHUB_STEP_SUMMARY
#          echo $GITHUB_STEP_SUMMARY
